{"Typealiases.html#/s:4Task17CompletionHandlera":{"name":"CompletionHandler","abstract":"<p>The completionHandler for callback&rsquo;s for Triggering with data after compltion of the Task</p>"},"Functions.html#/s:4Task9showAlertyySSF":{"name":"showAlert(_:)","abstract":"<p>For Displaying Alert based on Validations, Information Or Getting error&rsquo;s from Web API</p>"},"Functions.html#/s:4Task12showActivityyyF":{"name":"showActivity()","abstract":"<p>Method for showing activity indicator while getting data from web api.</p>"},"Functions.html#/s:4Task12hideActivityyyF":{"name":"hideActivity()","abstract":"<p>Method for hiding activity indicator after downloading data from web api.</p>"},"Functions.html#/s:4Task28addNoInternetConnectionLabelyyF":{"name":"addNoInternetConnectionLabel()","abstract":"<p>Adding Label if Internet is not available.</p>"},"Extensions/UIView.html#/c:@CM@Task@@objc(cs)UIView(py)cornerRadius":{"name":"cornerRadius","abstract":"<p>The radius to use when drawing rounded corners for the layer’s background.","parent_name":"UIView"},"Extensions/UIView.html#/c:@CM@Task@@objc(cs)UIView(py)borderWidth":{"name":"borderWidth","abstract":"<p>The width of the layer’s border.","parent_name":"UIView"},"Extensions/UIView.html#/c:@CM@Task@@objc(cs)UIView(py)borderColor":{"name":"borderColor","abstract":"<p>The color of the layer’s border.","parent_name":"UIView"},"Extensions/UIView.html#/c:@CM@Task@@objc(cs)UIView(py)rightLineColor":{"name":"rightLineColor","abstract":"<p>Undocumented</p>","parent_name":"UIView"},"Extensions/UIView.html#/c:@CM@Task@@objc(cs)UIView(py)rightLineWidth":{"name":"rightLineWidth","abstract":"<p>Undocumented</p>","parent_name":"UIView"},"Extensions/UIView.html#/s:So6UIViewC4TaskE10isMyHiddenyyF":{"name":"isMyHidden()","abstract":"<p>A Boolean value that determines whether the view is hidden.","parent_name":"UIView"},"Extensions/UIView.html#/s:So6UIViewC4TaskE11changeAlphayyF":{"name":"changeAlpha()","abstract":"<p>Undocumented</p>","parent_name":"UIView"},"Extensions/UIView.html#/s:So6UIViewC4TaskE13applyGradient7colours9locationsySaySo7UIColorCG_SaySo8NSNumberCGSgtF":{"name":"applyGradient(colours:locations:)","abstract":"<p>Undocumented</p>","parent_name":"UIView"},"Extensions/UIColor.html#/s:So7UIColorC4TaskE1r1g1bAB12CoreGraphics7CGFloatV_A2Itcfc":{"name":"init(r:g:b:)","abstract":"<p>Undocumented</p>","parent_name":"UIColor"},"Extensions/UIColor.html#/s:So7UIColorC4TaskE16titleHeaderColorAByFZ":{"name":"titleHeaderColor()","abstract":"<p>School Name Text Color</p>","parent_name":"UIColor"},"Extensions/UIColor.html#/s:So7UIColorC4TaskE9hintColorAByFZ":{"name":"hintColor()","abstract":"<p>Hint Color for UILabel</p>","parent_name":"UIColor"},"Extensions/UIColor.html#/s:So7UIColorC4TaskE14valueTextColorAByFZ":{"name":"valueTextColor()","abstract":"<p>Text Color for UILabel</p>","parent_name":"UIColor"},"Extensions/String.html#/s:SS4TaskE22htmlToAttributedStringSo012NSAttributedE0CSgvp":{"name":"htmlToAttributedString","abstract":"<p>Helper method of <em>htmlToString</em> to convert the html to attributed string</p>","parent_name":"String"},"Extensions/String.html#/s:SS4TaskE12htmlToStringSSvp":{"name":"htmlToString","abstract":"<p>Method to convert the html to attributed string</p>","parent_name":"String"},"Extensions/String.html#/s:SS4TaskE14checkNullValueySSypFZ":{"name":"checkNullValue(_:)","abstract":"<p>For Checking Null Type For each parameter From Api or Database</p>","parent_name":"String"},"Extensions/String.html#/s:SS4TaskE17checkNullValue_NAySSypFZ":{"name":"checkNullValue_NA(_:)","abstract":"<p>For Checking Null Type For each parameter From Api or Database</p>","parent_name":"String"},"Extensions/String.html#/s:SS4TaskE17checkNSNumberNullySSypFZ":{"name":"checkNSNumberNull(_:)","abstract":"<p>For Checking Null Type For each parameter From Api or Database</p>","parent_name":"String"},"Extensions/String.html#/s:SS4TaskE13checkBoolNullySbypFZ":{"name":"checkBoolNull(_:)","abstract":"<p>For Checking Null Type For each parameter From Api or Database</p>","parent_name":"String"},"Extensions/String.html#/s:SS4TaskE10checkArrayySo7NSArrayCypFZ":{"name":"checkArray(_:)","abstract":"<p>For Checking Null Type For each parameter From Api or Database</p>","parent_name":"String"},"Extensions/String.html#/s:SS4TaskE15checkDictionaryySo12NSDictionaryCypFZ":{"name":"checkDictionary(_:)","abstract":"<p>For Checking Null Type For each parameter From Api or Database</p>","parent_name":"String"},"Extensions/String.html":{"name":"String"},"Extensions/UIColor.html":{"name":"UIColor"},"Extensions/UIView.html":{"name":"UIView"},"Enums/APITYPE.html#/s:4Task7APITYPEO3GETyA2CmF":{"name":"GET","abstract":"<p>Undocumented</p>","parent_name":"APITYPE"},"Enums/APITYPE.html#/s:4Task7APITYPEO4POSTyA2CmF":{"name":"POST","abstract":"<p>Undocumented</p>","parent_name":"APITYPE"},"Enums/APITYPE.html#/s:4Task7APITYPEO6DELETEyA2CmF":{"name":"DELETE","abstract":"<p>Undocumented</p>","parent_name":"APITYPE"},"Enums/APITYPE.html#/s:4Task7APITYPEO3PUTyA2CmF":{"name":"PUT","abstract":"<p>Undocumented</p>","parent_name":"APITYPE"},"Enums/APITYPE.html":{"name":"APITYPE","abstract":"<p>The Enumeration stoting WebService API TYpe</p>"},"Global%20Variables.html#/s:4Task20kNoConnectivityLabelSo7UILabelCSgvp":{"name":"kNoConnectivityLabel","abstract":"<p>internet connectivity status label</p>"},"Global%20Variables.html#/s:4Task12SCREEN_WIDTH12CoreGraphics7CGFloatVvp":{"name":"SCREEN_WIDTH","abstract":"<p>Instance for stores Width of the Device</p>"},"Global%20Variables.html#/s:4Task13SCREEN_HEIGHT12CoreGraphics7CGFloatVvp":{"name":"SCREEN_HEIGHT","abstract":"<p>Instance for stores Height of the Device</p>"},"Global%20Variables.html#/s:4Task11appDelegateAA03AppC0Cvp":{"name":"appDelegate","abstract":"<p>This instace for sharing inside of Appdelegate Objects and Fuctions</p>"},"Global%20Variables.html#/s:4Task13kWrongMessageSSvp":{"name":"kWrongMessage","abstract":"<p>If any thing getting error but not message from API then Displaying the default Message</p>"},"Global%20Variables.html#/s:4Task18DETAILS_IDENTIFIERSSvp":{"name":"DETAILS_IDENTIFIER","abstract":"<p>Undocumented</p>"},"Global%20Variables.html#/s:4Task24DETAILS_STORY_IDENTIFIERSSvp":{"name":"DETAILS_STORY_IDENTIFIER","abstract":"<p>Undocumented</p>"},"Global%20Variables.html#/s:4Task6APP_IDSSvp":{"name":"APP_ID","abstract":"<p>APP_ID object that registered with services</p>"},"Global%20Variables.html#/s:4Task7APP_KEYSSvp":{"name":"APP_KEY","abstract":"<p>APP_KEY object that registered with services</p>"},"Global%20Variables.html#/s:4Task7baseURLSSvp":{"name":"baseURL","abstract":"<p>basic api link</p>"},"Global%20Variables.html#/s:4Task15SCHOOLSLIST_URLSSvp":{"name":"SCHOOLSLIST_URL","abstract":"<p>api&rsquo;s list</p>"},"Classes/Schools.html#/s:4Task7SchoolsC12fetchRequestSo07NSFetchD0CyACGyFZ":{"name":"fetchRequest()","abstract":"<p>Undocumented</p>","parent_name":"Schools"},"Classes/Schools.html#/c:@CM@Task@objc(cs)Schools(py)address":{"name":"address","abstract":"<p>Undocumented</p>","parent_name":"Schools"},"Classes/Schools.html#/c:@CM@Task@objc(cs)Schools(py)highGrade":{"name":"highGrade","abstract":"<p>Undocumented</p>","parent_name":"Schools"},"Classes/Schools.html#/c:@CM@Task@objc(cs)Schools(py)isPrivate":{"name":"isPrivate","abstract":"<p>Undocumented</p>","parent_name":"Schools"},"Classes/Schools.html#/c:@CM@Task@objc(cs)Schools(py)lowGrade":{"name":"lowGrade","abstract":"<p>Undocumented</p>","parent_name":"Schools"},"Classes/Schools.html#/c:@CM@Task@objc(cs)Schools(py)phone":{"name":"phone","abstract":"<p>Undocumented</p>","parent_name":"Schools"},"Classes/Schools.html#/c:@CM@Task@objc(cs)Schools(py)privateHours":{"name":"privateHours","abstract":"<p>Undocumented</p>","parent_name":"Schools"},"Classes/Schools.html#/c:@CM@Task@objc(cs)Schools(py)rankMovement":{"name":"rankMovement","abstract":"<p>Undocumented</p>","parent_name":"Schools"},"Classes/Schools.html#/c:@CM@Task@objc(cs)Schools(py)schoolid":{"name":"schoolid","abstract":"<p>Undocumented</p>","parent_name":"Schools"},"Classes/Schools.html#/c:@CM@Task@objc(cs)Schools(py)schoolLevel":{"name":"schoolLevel","abstract":"<p>Undocumented</p>","parent_name":"Schools"},"Classes/Schools.html#/c:@CM@Task@objc(cs)Schools(py)schoolName":{"name":"schoolName","abstract":"<p>Undocumented</p>","parent_name":"Schools"},"Classes/SchoolDetailsViewController.html#/s:4Task27SchoolDetailsViewControllerC9schoolObjAA0B4ListCSgvp":{"name":"schoolObj","abstract":"<p>object that holds the selected school object from the previous screen</p>","parent_name":"SchoolDetailsViewController"},"Classes/SchoolDetailsViewController.html#/c:@M@Task@objc(cs)SchoolDetailsViewController(py)schoolNameLbl":{"name":"schoolNameLbl","abstract":"<p>Label to show the School Name</p>","parent_name":"SchoolDetailsViewController"},"Classes/SchoolDetailsViewController.html#/c:@M@Task@objc(cs)SchoolDetailsViewController(py)schoolLevelLbl":{"name":"schoolLevelLbl","abstract":"<p>Label to show the School Level</p>","parent_name":"SchoolDetailsViewController"},"Classes/SchoolDetailsViewController.html#/c:@M@Task@objc(cs)SchoolDetailsViewController(py)schoolTypeLbl":{"name":"schoolTypeLbl","abstract":"<p>Label to show the School Type</p>","parent_name":"SchoolDetailsViewController"},"Classes/SchoolDetailsViewController.html#/c:@M@Task@objc(cs)SchoolDetailsViewController(py)rankMovementLbl":{"name":"rankMovementLbl","abstract":"<p>Label to show the School Rank</p>","parent_name":"SchoolDetailsViewController"},"Classes/SchoolDetailsViewController.html#/c:@M@Task@objc(cs)SchoolDetailsViewController(py)phoneLbl":{"name":"phoneLbl","abstract":"<p>Label to show the School Phone Number</p>","parent_name":"SchoolDetailsViewController"},"Classes/SchoolDetailsViewController.html#/c:@M@Task@objc(cs)SchoolDetailsViewController(py)lowGradeLbl":{"name":"lowGradeLbl","abstract":"<p>Label to show the School Low Grade</p>","parent_name":"SchoolDetailsViewController"},"Classes/SchoolDetailsViewController.html#/c:@M@Task@objc(cs)SchoolDetailsViewController(py)highGradeLbl":{"name":"highGradeLbl","abstract":"<p>Label to show the School High Grade</p>","parent_name":"SchoolDetailsViewController"},"Classes/SchoolDetailsViewController.html#/c:@M@Task@objc(cs)SchoolDetailsViewController(py)schoolHoursLbl":{"name":"schoolHoursLbl","abstract":"<p>Label to show the School Hours</p>","parent_name":"SchoolDetailsViewController"},"Classes/SchoolDetailsViewController.html#/c:@M@Task@objc(cs)SchoolDetailsViewController(py)addressLbl":{"name":"addressLbl","abstract":"<p>Label to show the School Address</p>","parent_name":"SchoolDetailsViewController"},"Classes/SchoolDetailsViewController.html#/c:@M@Task@objc(cs)SchoolDetailsViewController(im)viewDidLoad":{"name":"viewDidLoad()","abstract":"<p>View load method</p>","parent_name":"SchoolDetailsViewController"},"Classes/SchoolDetailsViewController.html#/s:4Task27SchoolDetailsViewControllerC5setUIyyF":{"name":"setUI()","abstract":"<p>UI binding logics</p>","parent_name":"SchoolDetailsViewController"},"Classes/SchoolDetailsViewController.html#/c:@M@Task@objc(cs)SchoolDetailsViewController(im)callTapped:":{"name":"callTapped(_:)","abstract":"<p>Method for the calling functionality</p>","parent_name":"SchoolDetailsViewController"},"Classes/RootViewController.html#/s:4Task18RootViewControllerC16currentPageIndexSivp":{"name":"currentPageIndex","abstract":"<p>object that holds Page number of the API</p>","parent_name":"RootViewController"},"Classes/RootViewController.html#/s:4Task18RootViewControllerC10totalPagesSivp":{"name":"totalPages","abstract":"<p>object that holds total service call requests</p>","parent_name":"RootViewController"},"Classes/RootViewController.html#/s:4Task18RootViewControllerC7perPageSivp":{"name":"perPage","abstract":"<p>object that holds service call per page request</p>","parent_name":"RootViewController"},"Classes/RootViewController.html#/s:4Task18RootViewControllerC15schoolListArraySayAA06SchoolF0CGvp":{"name":"schoolListArray","abstract":"<p>array object that holds table data</p>","parent_name":"RootViewController"},"Classes/RootViewController.html#/c:@M@Task@objc(cs)RootViewController(py)schoolListTableView":{"name":"schoolListTableView","abstract":"<p>tableview for displaying the schools list</p>","parent_name":"RootViewController"},"Classes/RootViewController.html#/c:@M@Task@objc(cs)RootViewController(py)noDataLbl":{"name":"noDataLbl","abstract":"<p>label for displaying the message if there is no data</p>","parent_name":"RootViewController"},"Classes/RootViewController.html#/c:@M@Task@objc(cs)RootViewController(im)viewDidLoad":{"name":"viewDidLoad()","abstract":"<p>View load method</p>","parent_name":"RootViewController"},"Classes/RootViewController.html#/s:4Task18RootViewControllerC20getSchoolListFromApiyyF":{"name":"getSchoolListFromApi()","abstract":"<p>Schools list API calling</p>","parent_name":"RootViewController"},"Classes/RootViewController.html#/s:4Task18RootViewControllerC18dataBindingToModelyySo12NSDictionaryCF":{"name":"dataBindingToModel(_:)","abstract":"<p>Api Response Binding to SchoolList Model Class And checking whether Array count is empty or not</p>","parent_name":"RootViewController"},"Classes/RootViewController.html#/c:@CM@Task@objc(cs)RootViewController(im)numberOfSectionsInTableView:":{"name":"numberOfSections(in:)","abstract":"<p>To display the number of sections for table</p>","parent_name":"RootViewController"},"Classes/RootViewController.html#/c:@CM@Task@objc(cs)RootViewController(im)tableView:numberOfRowsInSection:":{"name":"tableView(_:numberOfRowsInSection:)","abstract":"<p>To display number of rows in each section of table</p>","parent_name":"RootViewController"},"Classes/RootViewController.html#/c:@CM@Task@objc(cs)RootViewController(im)tableView:cellForRowAtIndexPath:":{"name":"tableView(_:cellForRowAt:)","abstract":"<p>To set the values for fields on the each cell of the row</p>","parent_name":"RootViewController"},"Classes/RootViewController.html#/c:@CM@Task@objc(cs)RootViewController(im)tableView:didSelectRowAtIndexPath:":{"name":"tableView(_:didSelectRowAt:)","abstract":"<p>Click action delegate of table view row.</p>","parent_name":"RootViewController"},"Classes/RootViewController.html#/c:@CM@Task@objc(cs)RootViewController(im)tableView:willDisplayCell:forRowAtIndexPath:":{"name":"tableView(_:willDisplay:forRowAt:)","abstract":"<p>Methods as soon as the cell is displayed</p>","parent_name":"RootViewController"},"Classes/RootViewController.html#/c:@CM@Task@objc(cs)RootViewController(im)scrollViewDidEndDecelerating:":{"name":"scrollViewDidEndDecelerating(_:)","abstract":"<p>This is for calling APi with increasing of pagination if User showing last results in TableView</p>","parent_name":"RootViewController"},"Classes/SchoolTVCell.html#/c:@M@Task@objc(cs)SchoolTVCell(py)schoolNameLbl":{"name":"schoolNameLbl","abstract":"<p>Label to show the School Name</p>","parent_name":"SchoolTVCell"},"Classes/SchoolTVCell.html#/c:@M@Task@objc(cs)SchoolTVCell(py)schoolTypeStaticLbl":{"name":"schoolTypeStaticLbl","abstract":"<p>Static Label of the School Type</p>","parent_name":"SchoolTVCell"},"Classes/SchoolTVCell.html#/c:@M@Task@objc(cs)SchoolTVCell(py)schoolLevelStaticLbl":{"name":"schoolLevelStaticLbl","abstract":"<p>Static Label to the School Level</p>","parent_name":"SchoolTVCell"},"Classes/SchoolTVCell.html#/c:@M@Task@objc(cs)SchoolTVCell(py)schoolTypeLbl":{"name":"schoolTypeLbl","abstract":"<p>Label to show the School Type</p>","parent_name":"SchoolTVCell"},"Classes/SchoolTVCell.html#/c:@M@Task@objc(cs)SchoolTVCell(py)schoolLevelLbl":{"name":"schoolLevelLbl","abstract":"<p>Label to show the School Level</p>","parent_name":"SchoolTVCell"},"Classes/SchoolTVCell.html#/c:@M@Task@objc(cs)SchoolTVCell(im)awakeFromNib":{"name":"awakeFromNib()","abstract":"<p>Method that hanlde as soon as the cell displayed, used for any declarations</p>","parent_name":"SchoolTVCell"},"Classes/SchoolTVCell.html#/c:@M@Task@objc(cs)SchoolTVCell(im)setSelected:animated:":{"name":"setSelected(_:animated:)","abstract":"<p>Method that hanlde as soon as the cell displayed, used for any declarations</p>","parent_name":"SchoolTVCell"},"Classes/SchoolTVCell.html#/s:4Task12SchoolTVCellC9schoolObjAA0B4ListCSgvp":{"name":"schoolObj","abstract":"<p>Getting school Model Object and Displaying school informatio in UI</p>","parent_name":"SchoolTVCell"},"Classes/SchoolList.html#/s:4Task10SchoolListC8schoolIDSSSgvp":{"name":"schoolID","abstract":"<p>String object that holds School ID</p>","parent_name":"SchoolList"},"Classes/SchoolList.html#/s:4Task10SchoolListC10schoolNameSSSgvp":{"name":"schoolName","abstract":"<p>String object that holds School Name</p>","parent_name":"SchoolList"},"Classes/SchoolList.html#/s:4Task10SchoolListC11schoolLevelSSSgvp":{"name":"schoolLevel","abstract":"<p>String object that holds School Level</p>","parent_name":"SchoolList"},"Classes/SchoolList.html#/s:4Task10SchoolListC5phoneSSSgvp":{"name":"phone","abstract":"<p>String object that holds School Phone Number to contact</p>","parent_name":"SchoolList"},"Classes/SchoolList.html#/s:4Task10SchoolListC12rankMovementSSSgvp":{"name":"rankMovement","abstract":"<p>String object that holds School Rank</p>","parent_name":"SchoolList"},"Classes/SchoolList.html#/s:4Task10SchoolListC8lowGradeSSSgvp":{"name":"lowGrade","abstract":"<p>String object that holds School Low Grade</p>","parent_name":"SchoolList"},"Classes/SchoolList.html#/s:4Task10SchoolListC9highGradeSSSgvp":{"name":"highGrade","abstract":"<p>String object that holds School High Grade</p>","parent_name":"SchoolList"},"Classes/SchoolList.html#/s:4Task10SchoolListC12privateHoursSSSgvp":{"name":"privateHours","abstract":"<p>String object that holds School Timings</p>","parent_name":"SchoolList"},"Classes/SchoolList.html#/s:4Task10SchoolListC7addressSSSgvp":{"name":"address","abstract":"<p>String object that holds School Address</p>","parent_name":"SchoolList"},"Classes/SchoolList.html#/s:4Task10SchoolListC9isPrivateSbSgvp":{"name":"isPrivate","abstract":"<p>String object that holds School Private or public</p>","parent_name":"SchoolList"},"Classes/SchoolList.html#/s:4Task10SchoolListC4dictACSDySSypG_tcfc":{"name":"init(dict:)","abstract":"<p>Getting data from dictionary and storing in each object with help Dictionary key&rsquo;s</p>","parent_name":"SchoolList"},"Classes/SharedManager.html#/s:4Task13SharedManagerC20managedObjectContextSo09NSManagedeF0Cvp":{"name":"managedObjectContext","abstract":"<p>The Managed Object Context for the Fetch and save data in Database(Coredata) file.</p>","parent_name":"SharedManager"},"Classes/SharedManager.html#/c:@M@Task@objc(cs)SharedManager(cpy)shared":{"name":"shared","abstract":"<p>single instance object for sharing the code without creating multiples instances</p>","parent_name":"SharedManager"},"Classes/SharedManager.html#/s:4Task13SharedManagerC35showIndicatorForPaginationTableView_8forRowAt7perPageySo07UITableI0C_10Foundation9IndexPathVSitF":{"name":"showIndicatorForPaginationTableView(_:forRowAt:perPage:)","abstract":"<p>Showing acivity indicator for Pagination</p>","parent_name":"SharedManager"},"Classes/SharedManager.html#/s:4Task13SharedManagerC17showTableOrNoData_9tableView5countySo7UILabelC_So07UITableJ0CSitF":{"name":"showTableOrNoData(_:tableView:count:)","abstract":"<p>Checking whether data is avaible or not in Array based that we have to show dataView or NoData available label</p>","parent_name":"SharedManager"},"Classes/SharedManager.html#/s:4Task13SharedManagerC4callyySSF":{"name":"call(_:)","abstract":"<p>To make a call&rsquo;s for Displayed Phone Number to contact School&rsquo;s, etc&hellip;</p>","parent_name":"SharedManager"},"Classes/SharedManager.html#/s:4Task13SharedManagerC22insertSchoolinDataBaseyyAA10SchoolListCF":{"name":"insertSchoolinDataBase(_:)","abstract":"<p>For saving school information in database file</p>","parent_name":"SharedManager"},"Classes/SharedManager.html#/s:4Task13SharedManagerC25getSchoolListFromDatabaseSayAA0eF0CGyF":{"name":"getSchoolListFromDatabase()","abstract":"<p>Fetching the data from database file with name of Schools Table</p>","parent_name":"SharedManager"},"Classes/ServiceManager.html#/c:@M@Task@objc(cs)ServiceManager(cpy)shared":{"name":"shared","abstract":"<p>shared object of the singleton class <code>ServiceManager</code></p>","parent_name":"ServiceManager"},"Classes/ServiceManager.html#/c:@M@Task@objc(cs)ServiceManager(im)callToGetDataFromServerWithAppendUrlString:withIndicator:completionHandler:":{"name":"callToGetDataFromServer(appendUrlString:withIndicator:completionHandler:)","abstract":"<p>Calling WebService API For downloading the data from Web Server</p>","parent_name":"ServiceManager"},"Classes/ServiceManager.html#/s:4Task14ServiceManagerC25checkInternetAvailabilitySbyF":{"name":"checkInternetAvailability()","abstract":"<p>Checking internet availability</p>","parent_name":"ServiceManager"},"Classes/AppDelegate.html#/c:@M@Task@objc(cs)AppDelegate(py)window":{"name":"window","abstract":"<p>root object for the current application</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/s:4Task11AppDelegateC20internetReachabilityXevp":{"name":"internetReachability","abstract":"<p>The reachability for the internet Reachability.</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/s:4Task11AppDelegateC20internetAvailabilitySbvp":{"name":"internetAvailability","abstract":"<p>The Bool for the internet availablity.</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@Task@objc(cs)AppDelegate(im)application:didFinishLaunchingWithOptions:":{"name":"application(_:didFinishLaunchingWithOptions:)","abstract":"<p>This method is the initial method which is called after opening the application. In this method all the initialization of object required globally for reusing in entire app will be done</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@Task@objc(cs)AppDelegate(im)applicationWillTerminate:":{"name":"applicationWillTerminate(_:)","abstract":"<p>Application local database is closed when application is terminated</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@Task@objc(cs)AppDelegate(im)reachabilityChangedWithNote:":{"name":"reachabilityChanged(note:)","abstract":"<p>It triggers the breaking of the fullname being in the <code>txtFullName</code> textfield into its components.</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/s:4Task11AppDelegateC19persistentContainerSo012NSPersistentE0Cvp":{"name":"persistentContainer","abstract":"<p>Object that handles with core data synchronisations</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/s:4Task11AppDelegateC11saveContextyyF":{"name":"saveContext()","abstract":"<p>Method to save the coredata objects in to local</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html":{"name":"AppDelegate","abstract":"<p>The purpose of the <code>AppDelegate</code> is handling all the <code>UIApplication</code> methods and its delagate methods to handle <code>UIApplication</code> configurations</p>"},"Classes/ServiceManager.html":{"name":"ServiceManager","abstract":"<p>The purpose of the <code>ServiceManager</code> is to Calling web API calls and sending downloaded Web API Data to Respected class with help of call back funtion.</p>"},"Classes/SharedManager.html":{"name":"SharedManager","abstract":"<p>The purpose of the <code>SharedManager</code> is to use in this methods in multiple classe&rsquo;s without creating class instance in different classes</p>"},"Classes/SchoolList.html":{"name":"SchoolList","abstract":"<p>The purpose of the <code>SchoolList</code> is to save School information in parameters</p>"},"Classes/SchoolTVCell.html":{"name":"SchoolTVCell","abstract":"<p>The purpose of the <code>SchoolTVCell</code> is to display the each school - Name, Type, Level</p>"},"Classes/RootViewController.html":{"name":"RootViewController","abstract":"<p>The purpose of the <code>RootViewController</code> is to fetch the schools list from the api and display the details on a tableview cell</p>"},"Classes/SchoolDetailsViewController.html":{"name":"SchoolDetailsViewController","abstract":"<p>The purpose of the <code>SchoolDetailsViewController</code> is to show the Selcted School information in detail way</p>"},"Classes/Schools.html":{"name":"Schools","abstract":"<p>Undocumented</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Global%20Variables.html":{"name":"Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}